
AVR:
----

SAMD51:
-------

  SAM D51 support: (See Cortex-M4 Technical Reference Manual)
  * Watchpoint unit support - allow watching on mem addrs / var symbols.
    watchpoints are ignored in higher-prio IRQs. Document this.

  * Add a `next` command that will 'step' until filename:lineno changes.
    (Can we use addr2line to figure this out in advance and implement 'step (n)' or do
    we just need to keep STEPping?)

  * Add a 'step return' command that uses CFI to figure out the $LR value (return point) for
    the method under debug, and set a hw bp for that addr.

  * A 'step n' command can be implemented using DWT comparator 0 in CYCCOUNT matching mode.
    Set DWT_COMP0 to 'n+k' and reset CYCCNT <- 0. CYCCNT increments only if DWT_CTRL.CYCCNTENA is set;
    we should enable this bit at the last possible moment before returning from the interrupts.
    (And we should disable it on interrupt entry.) We need to adjust DWT_COMP0 by 'k' which is the
    number of further cycles it takes to destack the IRQ frame and transition back to user code.


General:
--------

  * Add watchpoint commands.

  * `info`, `print`, etc. should handle float / double types.

  * Add formatted print keywords:
      `print/d`, `print/b`, `print/x` for integers.
      `print/a`, `print/u`, `print/d`, `print/x` for strings in ascii, utf8, or dec/hex byte vals.
      `print/f` - floating point.

      ... should these modifiers also apply to 'locals' and 'frame' ?
      At minimum they need to also apply to 'info'.

  * Can we implement a 'setlocal' ?
    * Would need to use call frame info to determine where on the stack it lives...
      or where on the stack frame above the local the register got saved.
    * This would be very tricky for frames below #0; especially if the register is live/implicit
      in the current frame, it could make the current frame have undefined behavior. If it was
      pushed on the stack but not in frame 'n-1' then it could cause undefined behavior in that
      intermediate frame.

  * types.py should handle bit fields?

  * add notion of "current frame" that can be adjusted rather than just as immediate arg
    to `frame` / `\f`, locals, etc?

  * Optionally embed ELF file in core dump file, for all-in-one dump file w/o separate .elf.


